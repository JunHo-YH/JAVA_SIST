/*
 * 메서드 유형
 * ===
 * 리턴형(결과값) 메서드명(매개변수) {// 선언부
 *     구현부
 * } 
 * ***** 메서드는 {}가 없으면 메모리에 저장이 안된다. (추상메서드외)
 * 
 * 리턴형(결과값): 사용자가 요청한 내용을 처리한 결과값
 *             결과값은 1개만 사용 가능하다
 *             *** 여러개의 결과값이 나오는 경우 (배열, 클래스)
 *             *** 처리후에 결과값이 없는 경우에는 void (자체에서 결과값 출력)
 *             
 * 결과값 메서드명(매개변수...) {
 * ====
 *     값을 전송하는 방법
 *     return 값
 *            =
 * }
 * 
 * ***** return을 반드시 필요로 한다.
 * 
 * void 메서드명(매개변수) {
 *     // return이 없는 경우에는 JVM이 자동으로 추가(생략가능)
 * }
 * void 메서드명(매개변수) {
 *     return; // 메서드가 종료
 * }
 * 
 * 2) 메서드명 (변수명 설정하는 방법과 동일): 식별자
 *    의미가 있으면 좋다, 글자수는 제한이 없다.
 *    알파벳이나 한글로 시작한다 (단, 알파벳은 대소문자를 구분한다)
 *    숫자는 사용가능 (앞에 사용금지)
 *    키워드는 사용할 수 없다.
 *    특수문자 사용이 가능하다 (_ , $)
 *    *** 변수, 메서드 -> 소문자로 시작(단어가 두 개 이상일 경우 => next int => nextInt()
 *    ====================================================================== 권장 사항(프로그래머의 약속)
 * 
 * 3) 매개변수 (인자): 기본데이터형, 배열, 클래스 
 *    *** 사용자가 요청하는 값
 *    
 * 4) 구현부 {구현하는 부분} => 사용자의 요청에 대한 처리 => 종료는 반드시 return
 *    *** void일 경우에는 return을 생략할 수 있다. 
 *    return은 항상 마지막줄에 있는 것은 아니다.
 *    
 *    메서드의 종류
 *    ======================================================
 *     리턴형 	매개변수
 *    ======================================================
 *      O		  O 	String substring(int start)       => 1번
 *    ======================================================
 *      O		  X 	double random()					  => 2번
 *    ======================================================
 *      X  		  O 	void println(2021), ("꾸준호") ...  => 3번
 *    ======================================================
 *      X  		  X 	void println()					  => 4번
 *    ======================================================
 *    ** 리턴형은 1개만 사용 가능
 *       매개변수는 여러개 사용 가능
 *       
 *   
 *
 *	static void display() ===> 자동 저장 (클래스메서드)
 *	void display() ===> (멤버메서드)
 *    
 */

import java.util.Scanner;

public class 메서드만들기 {
	// 메서드는 클래스{} 안에서 제작
	// 사용자로부터 단을 받아서 구구단을 출력 ==> 3유형 (리턴형X, 매개변수O)

	static void gugudan(int dan) {
		// 블록안에서 직접 처리
		for (int i = 1; i <= 9; i++) {
			System.out.printf("%d * %d = %d\n", dan, i, dan * i);
		}
	}

	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		System.out.print("단 입력: ");
		int dan = scan.nextInt();
		
		//메서드 호출 => 메서드명(실제값)
		gugudan(dan);
		System.out.println("프로그램 종료");
	}

}
